@page "/times/display/chart"

<h3>Times Chart</h3>
@if (Times == null || Names == null)
{
    <p>Loading...</p>
}
else
{
    <h4>DevExpress Chart</h4>
    <DxChart Data="@Times">
        @foreach (string name in Names)
        {
            <DxChartLineSeries Name="@name" Filter="((RunTime rt) => rt.Name ==name)" ArgumentField="((RunTime rt) => rt.Date)" ValueField="((RunTime rt) => rt.Time.Minute+rt.Time.Second/60.0)" />
        }
        <DxChartValueAxis>
            <DxChartAxisTitle Text="Minutes"></DxChartAxisTitle>
        </DxChartValueAxis>
        <DxChartArgumentAxis>
            <DxChartAxisTitle Text="Date/Time"></DxChartAxisTitle>
        </DxChartArgumentAxis>
        <DxChartLegend Position="RelativePosition.Outside" HorizontalAlignment="HorizontalAlignment.Right" />
    </DxChart>
}
@code {
    public List<RunTime> Times { get; set; } = new List<RunTime>();
    public List<string> Names { get; set; } = new List<string>();
    protected override void OnInitialized()
    {

        Times.Add(new RunTime() { Id = 1, Name = "Rose", Date = DateTime.Now - TimeSpan.FromDays(20), Time = new DateTime(1, 1, 1, 0, 37, 20) });
        Times.Add(new RunTime() { Id = 2, Name = "Rose", Date = DateTime.Now - TimeSpan.FromDays(2), Time = new DateTime(1, 1, 1, 0, 36, 30) });
        Times.Add(new RunTime() { Id = 3, Name = "Rose", Date = DateTime.Now - TimeSpan.FromDays(1), Time = new DateTime(1, 1, 1, 0, 34, 23) });
        Times.Add(new RunTime() { Id = 4, Name = "Rose", Date = DateTime.Now - TimeSpan.FromDays(0), Time = new DateTime(1, 1, 1, 0, 33, 12) });
        Times.Add(new RunTime() { Id = 5, Name = "Lily", Date = DateTime.Now - TimeSpan.FromDays(20), Time = new DateTime(1, 1, 1, 0, 35, 43) });
        Times.Add(new RunTime() { Id = 6, Name = "Lily", Date = DateTime.Now - TimeSpan.FromDays(2), Time = new DateTime(1, 1, 1, 0, 33, 54) });
        Times.Add(new RunTime() { Id = 7, Name = "Lily", Date = DateTime.Now - TimeSpan.FromDays(1), Time = new DateTime(1, 1, 1, 0, 36, 17) });
        Times.Add(new RunTime() { Id = 8, Name = "Lily", Date = DateTime.Now - TimeSpan.FromDays(0), Time = new DateTime(1, 1, 1, 0, 33, 23) });
        Names = Times.Select(x => x.Name).Distinct().ToList();

        base.OnInitialized();
    }
}
