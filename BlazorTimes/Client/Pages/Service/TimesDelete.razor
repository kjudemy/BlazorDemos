@page "/times/service/{Id:int}/delete"
@using BlazorTimes.Client.Helpers
@inject NavigationManager navigationManager
@inject HttpClient  http

<h3>Delete Time</h3>
@if (Time == null)
{
    <h4>No Time!</h4>
}
else
{
    <div>
        <div class="form-group">
            <label>
                Name:
            </label>
            <input @bind="Time.Name" readonly />
        </div>
        <div class="form-group">
            <label>
                Date:
            </label>
            <input @bind="Time.Date" readonly type="date" />
        </div>
        <div class="form-group">
            <label>
                Time:
            </label>
            <input @bind="Time.Time" readonly type="time" />
        </div>
        <label>Are you sure?</label>
        <button @onclick="Delete">Yes</button>
        <button @onclick="Cancel">No</button>
    </div>
}
@code {
    public RunTime Time { get; set; }
    [Parameter]
    public int Id { get; set; }
    public RunTime[] Times { get; set; }
    protected async override Task OnInitializedAsync()
    {
        Time = await http.GetFromJsonAsync<RunTime>($"api/runtimes/{Id}");
        await base.OnInitializedAsync();
        return;
    }
    public async Task Delete()
    {
        if (Time != null)
        {

            var response = await http.DeleteAsync($"api/runtimes/{Id}");

        }
        navigationManager.NavigateTo("/times/service/display");
    }
    public void Cancel()
    {
        navigationManager.NavigateTo("/times/service/display");
    }
}
